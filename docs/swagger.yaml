basePath: /
consumes:
- application/json
definitions:
  main.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  main.Recipe:
    properties:
      id:
        type: string
      ingredients:
        items:
          type: string
        type: array
      instructions:
        items:
          type: string
        type: array
      name:
        type: string
      published_at:
        type: string
      tags:
        items:
          type: string
        type: array
    type: object
host: localhost:8080
info:
  contact:
    email: franck.nouama@gmail.com
    name: Franck Nouama
  description: This is a sample recipes API. You can find out more about the API at
    https://github.com/francknouama/recipes-api
  title: Recipes API
  version: 1.0.0
paths:
  /recipes:
    get:
      description: GET /recipes recipes listRecipes.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Recipe'
            type: array
      summary: Return all recipes in the repository.
      tags:
      - recipes
    post:
      consumes:
      - application/json
      description: POST /recipes recipes newRecipe
      parameters:
      - description: Recipe payload
        in: body
        name: recipe
        required: true
        schema:
          $ref: '#/definitions/main.Recipe'
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/main.Recipe'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Create a new recipe
      tags:
      - recipes
  /recipes/{id}:
    delete:
      description: DELETE /recipes/{id} recipes deleteRecipe
      parameters:
      - description: Recipe ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/main.Recipe'
        "404":
          description: Invalid recipe ID
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Delete an existing recipe
      tags:
      - recipes
    put:
      consumes:
      - application/json
      description: PUT /recipes/{id} recipes updateRecipe
      parameters:
      - description: Recipe ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/main.Recipe'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "404":
          description: Invalid recipe ID
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Update an existing recipe
      tags:
      - recipes
  /recipes/search:
    get:
      description: GET /recipes/search recipes searchRecipes.
      produces:
      - application/json
      responses:
        "200":
          description: Operation successfully ran
          schema:
            items:
              $ref: '#/definitions/main.Recipe'
            type: array
      summary: Return recipes matching our search criteria
      tags:
      - recipes
produces:
- application/json
schemes:
- http
swagger: "2.0"
